// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// median_rcpp
double median_rcpp(NumericVector x);
RcppExport SEXP scorer_median_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(median_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// absolute_error_rcpp
NumericVector absolute_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_absolute_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(absolute_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// percent_error_rcpp
NumericVector percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// log_error_rcpp
NumericVector log_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_log_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(log_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// squared_error_rcpp
NumericVector squared_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_squared_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(squared_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// squared_log_error_rcpp
NumericVector squared_log_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_squared_log_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(squared_log_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// absolute_percent_error_rcpp
NumericVector absolute_percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_absolute_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(absolute_percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_error_rcpp
double mean_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_absolute_error_rcpp
double mean_absolute_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_absolute_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_absolute_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// median_absolute_error_rcpp
double median_absolute_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_median_absolute_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(median_absolute_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_percent_error_rcpp
double mean_percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// median_percent_error_rcpp
double median_percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_median_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(median_percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_squared_error_rcpp
double mean_squared_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_squared_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_squared_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// median_squared_log_error_rcpp
double median_squared_log_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_median_squared_log_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(median_squared_log_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_squared_log_error_rcpp
double mean_squared_log_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_squared_log_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_squared_log_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// median_squared_error_rcpp
double median_squared_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_median_squared_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(median_squared_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// mean_absolute_percent_error_rcpp
double mean_absolute_percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_mean_absolute_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_absolute_percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}
// median_absolute_percent_error_rcpp
double median_absolute_percent_error_rcpp(NumericVector y_true, NumericVector y_pred);
RcppExport SEXP scorer_median_absolute_percent_error_rcpp(SEXP y_trueSEXP, SEXP y_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_true(y_trueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_pred(y_predSEXP);
    rcpp_result_gen = Rcpp::wrap(median_absolute_percent_error_rcpp(y_true, y_pred));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"scorer_median_rcpp", (DL_FUNC) &scorer_median_rcpp, 1},
    {"scorer_absolute_error_rcpp", (DL_FUNC) &scorer_absolute_error_rcpp, 2},
    {"scorer_percent_error_rcpp", (DL_FUNC) &scorer_percent_error_rcpp, 2},
    {"scorer_log_error_rcpp", (DL_FUNC) &scorer_log_error_rcpp, 2},
    {"scorer_squared_error_rcpp", (DL_FUNC) &scorer_squared_error_rcpp, 2},
    {"scorer_squared_log_error_rcpp", (DL_FUNC) &scorer_squared_log_error_rcpp, 2},
    {"scorer_absolute_percent_error_rcpp", (DL_FUNC) &scorer_absolute_percent_error_rcpp, 2},
    {"scorer_mean_error_rcpp", (DL_FUNC) &scorer_mean_error_rcpp, 2},
    {"scorer_mean_absolute_error_rcpp", (DL_FUNC) &scorer_mean_absolute_error_rcpp, 2},
    {"scorer_median_absolute_error_rcpp", (DL_FUNC) &scorer_median_absolute_error_rcpp, 2},
    {"scorer_mean_percent_error_rcpp", (DL_FUNC) &scorer_mean_percent_error_rcpp, 2},
    {"scorer_median_percent_error_rcpp", (DL_FUNC) &scorer_median_percent_error_rcpp, 2},
    {"scorer_mean_squared_error_rcpp", (DL_FUNC) &scorer_mean_squared_error_rcpp, 2},
    {"scorer_median_squared_log_error_rcpp", (DL_FUNC) &scorer_median_squared_log_error_rcpp, 2},
    {"scorer_mean_squared_log_error_rcpp", (DL_FUNC) &scorer_mean_squared_log_error_rcpp, 2},
    {"scorer_median_squared_error_rcpp", (DL_FUNC) &scorer_median_squared_error_rcpp, 2},
    {"scorer_mean_absolute_percent_error_rcpp", (DL_FUNC) &scorer_mean_absolute_percent_error_rcpp, 2},
    {"scorer_median_absolute_percent_error_rcpp", (DL_FUNC) &scorer_median_absolute_percent_error_rcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_scorer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
